locals {
  timestamp = regex_replace(timestamp(), "[- TZ:]", "")
}

source "virtualbox-iso" "autogenerated-1" {
  headless             = true
  boot_command         = {{ build.boot_cmd | replace('<<','{{') | replace('>>','}}') }}
  boot_wait            = "10s"
  disk_size            = {{ build.disk }}
  guest_additions_path = "{% raw %}VBoxGuestAdditions_{{.Version}}.iso{% endraw %}"
  guest_os_type        = "{{ build.type }}"
  http_directory       = "http"
  iso_checksum         = "{{ build.iso_checksum }}"
  iso_url              = "{{ build.iso_src }}"
  shutdown_command     = "echo '{{ build.username }}' | sudo -S /sbin/shutdown -hP now"
  ssh_username         = "{{ build.username }}"
  ssh_password         = "{{ build.password }}"
  ssh_port             = 22
  ssh_wait_timeout     = "10000s"
  vboxmanage           = [["modifyvm", "{% raw %}{{.Name}}{% endraw %}", "--memory", "{{ build.memory }}"], ["modifyvm", "{% raw %}{{.Name}}{% endraw %}", "--cpus", "{{ build.cpus }}"]]
}


build {
  sources = ["source.virtualbox-iso.autogenerated-1"]
  provisioner "shell" {
    execute_command = "echo '{{ build.password }}' | {% raw %}{{.Vars}}{% endraw %} sudo -S  sh {% raw %}{{.Path}}{% endraw %}"
    scripts = [
    {% for script in build.scripts %}
      "scripts/{{ script.name }}"{% if not loop.last %},{% endif %}
    {% endfor %}
    ]
  }


  post-processor "vagrant" {
    output = "{{ build_name }}.box"
  }
}
